<?php

namespace Model\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ModelEntityAuthorProxy extends \Model\Entity\Author implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setFirstname($pFirstname)
    {
        $this->__load();
        return parent::setFirstname($pFirstname);
    }

    public function setLastname($pLastname)
    {
        $this->__load();
        return parent::setLastname($pLastname);
    }

    public function getFullname()
    {
        $this->__load();
        return parent::getFullname();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getFirstname()
    {
        $this->__load();
        return parent::getFirstname();
    }

    public function getLastname()
    {
        $this->__load();
        return parent::getLastname();
    }

    public function addBook(\Model\Entity\Book $book)
    {
        $this->__load();
        return parent::addBook($book);
    }

    public function removeBook(\Model\Entity\Book $book)
    {
        $this->__load();
        return parent::removeBook($book);
    }

    public function getBooks()
    {
        $this->__load();
        return parent::getBooks();
    }

    public function fromArray($data, array $exclude = array (
))
    {
        $this->__load();
        return parent::fromArray($data, $exclude);
    }

    public function getEntityValues(\Zend_Form $form)
    {
        $this->__load();
        return parent::getEntityValues($form);
    }

    public function propertyExists($propertyName)
    {
        $this->__load();
        return parent::propertyExists($propertyName);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'firstname', 'lastname', 'books');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}