Models

A model is considered as local to its controller (controller model).

A model is shared only by its owning controller.

If a model contains code that another module wishes to use, then that code must be extracted to a service.


Services

A service is kind of a model, except that it doesn't belong to a certain domain or module. It can be used by any component.

Models and services should be instantiated only once per request.


View helpers, models and services

A module specific view helper may call on its own model. A general view helper must call a service.





Naming classes
==============

Controllers, Models, Forms, Presenters and Services should all be named with
the type as a part of the name, for clarity.

models/Entity/Entity.php
models/Service/EntityService.php
modules/module/forms/EntityForm.php
modules/module/models/EntityModel.php
modules/module/controllers/EntityController.php
modules/module/views/presenters/EntityPresenter.php
modules/module/views/scripts/entity/action.phtml


Naming actions (RESTful action names)
=====================================

Controller ~ "resource"
GET actions:
  index - list of records
  view  - show one record
  new   - show blank record
  edit  - show editable record
  (form - combine new and edit if they happen to be the same)

POST actions:
  create - create a record, redirect on success, (render 'new' on failure)
  update - update a record, redirect on success, (render 'edit' on failure)
  delete - delete a record, redirect on success, (redirect on failure)
  (save - combine create and update if they happen to be very similar)
